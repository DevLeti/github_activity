name: latest_activity

# todo : github activity 크롤링 코드 작성 --> json으로 저장하는 코드 구현
# todo : ajax로 read more 한 다음 더 가져올 수 있을 지?
# todo : github readme.md에서 수정한 다음 push하는 코드 작성 -> json을 push하는 방식으로.

# 어떤 조건에 workflow를 발생 시킬지.
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
# array형식도 가능. --> on: [pull_request, issues]
# on: push

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        $CONDA/bin/conda install flake8
        # stop the build if there are Python syntax errors or undefined names
        $CONDA/bin/flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        $CONDA/bin/flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: test run
      run: |
        echo "crawl.py"
        ::set-env name=result::python3 crawl.py
    - name: rename main_README.md to README.md
      if: $result == 1
      run: |
        rename main_README.md README.md
    - name: Commits
      if: $result == 1
      run: |
        git config --local user.email "GithubActivity@email"
        git config --local user.name "Github_Activity" # 커밋에 포함될 이름
        git add README.md
        git commit -m "Auto - Update data with Crawling" # 커밋 메세지
    - name: Push
      if: $result == 1
      uses: ad-m/github-push-action@master
      with:
        branch: 'master'
        github_token: ${{ secrets.GITHUB_TOKEN }}
